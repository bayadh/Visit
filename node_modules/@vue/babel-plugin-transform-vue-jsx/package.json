{
  "_args": [
    [
      {
        "raw": "@vue/babel-plugin-transform-vue-jsx@^1.0.0-beta.2",
        "scope": "@vue",
        "escapedName": "@vue%2fbabel-plugin-transform-vue-jsx",
        "name": "@vue/babel-plugin-transform-vue-jsx",
        "rawSpec": "^1.0.0-beta.2",
        "spec": ">=1.0.0-beta.2 <2.0.0",
        "type": "range"
      },
      "/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/@vue/babel-preset-jsx"
    ]
  ],
  "_from": "@vue/babel-plugin-transform-vue-jsx@^1.0.0-beta.2",
  "_hasShrinkwrap": false,
  "_id": "@vue/babel-plugin-transform-vue-jsx@1.0.0-beta.2",
  "_location": "/@vue/babel-plugin-transform-vue-jsx",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/babel-plugin-transform-vue-jsx_1.0.0-beta.2_1547229111408_0.7736629516661273"
  },
  "_npmUser": {
    "name": "nickmessing",
    "email": "dot.nick.dot.messing@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "@vue/babel-plugin-transform-vue-jsx@^1.0.0-beta.2",
    "scope": "@vue",
    "escapedName": "@vue%2fbabel-plugin-transform-vue-jsx",
    "name": "@vue/babel-plugin-transform-vue-jsx",
    "rawSpec": "^1.0.0-beta.2",
    "spec": ">=1.0.0-beta.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/babel-preset-jsx",
    "/@vue/babel-sugar-v-model",
    "/@vue/babel-sugar-v-on"
  ],
  "_resolved": "https://registry.npmjs.org/@vue/babel-plugin-transform-vue-jsx/-/babel-plugin-transform-vue-jsx-1.0.0-beta.2.tgz",
  "_shasum": "6f7903fe66a34a02163f418c426cf419e862d97e",
  "_shrinkwrap": null,
  "_spec": "@vue/babel-plugin-transform-vue-jsx@^1.0.0-beta.2",
  "_where": "/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/@vue/babel-preset-jsx",
  "author": {
    "name": "Evan You"
  },
  "dependencies": {
    "@babel/helper-module-imports": "^7.0.0",
    "@babel/plugin-syntax-jsx": "^7.2.0",
    "@vue/babel-helper-vue-jsx-merge-props": "^1.0.0-beta.2",
    "html-tags": "^2.0.0",
    "lodash.kebabcase": "^4.1.1",
    "svg-tags": "^1.0.0"
  },
  "description": "Babel plugin for Vue 2.0 JSX",
  "devDependencies": {
    "@babel/cli": "^7.2.0",
    "@babel/core": "^7.2.0",
    "@babel/preset-env": "^7.2.0",
    "@vue/test-utils": "^1.0.0-beta.26",
    "ava": "^0.25.0",
    "jsdom": "^13.0.0",
    "jsdom-global": "^3.0.2",
    "nyc": "^12.0.2",
    "rollup": "^0.67.4",
    "rollup-plugin-babel": "4.0.3",
    "rollup-plugin-babel-minify": "^6.2.0",
    "rollup-plugin-istanbul": "^2.0.1",
    "vue": "^2.5.17",
    "vue-template-compiler": "^2.5.17"
  },
  "directories": {},
  "dist": {
    "shasum": "6f7903fe66a34a02163f418c426cf419e862d97e",
    "integrity": "sha512-fvAymRZAPHitomRE+jIipWRj0STXNSMqeOSdOFu9Ffjqg9WGOxSdCjORxexManfZ2y5QDv7gzI1xfgprsK3nlw==",
    "tarball": "https://registry.npmjs.org/@vue/babel-plugin-transform-vue-jsx/-/babel-plugin-transform-vue-jsx-1.0.0-beta.2.tgz",
    "fileCount": 3,
    "unpackedSize": 13001,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcONe4CRA9TVsSAnZWagAAAGoP/jndaC8XEMVuKH3h6hqm\nfelIgXlhkxj0gYasRxO1ye8TYzMXqDFKr0uUoi6EfJx05YdimwKizMLihxFE\nrYdzQUZ0jaBhhBuFszFwFrNEa36dqkZv0/Dyh4xiduoNj0955FpwM3hRInpB\nQaK1QfDAZ1m4w8mL8dvWSJzMaOUEtMLZcCnjEuhsbY9s+E1MDH+kt4GfzUgo\nm1N0vAXBT941G5ioYvT8On0DtSlReKainkNz2dgIcygFeQpO1FE8MZNBiVHt\nPZPKyyyO0zI5p4YCkuWF8cbRqY9RP5DMb4bYslQ6FZcLFGAkVkqpbtPIB48h\nTevQVgzwyUsawIJAYkhUP5R7FP29krd7faL9TliThhkS4JSHA5ZnDtUKGH2d\nfU8uwLvszc00pQBlQFVc6eH0XoF8rXunRHF/TpGQhELewp1Ihb8f3dnC15Sf\ntyplpSu+XE2kBI18LHwMOqTjW7i0HWUo9XA3TzXgaOCGHZn9kSGHsoLVJZM8\n8ZEqEBR3sQ0+YhuRCaHeYBqWjpquPse1GKN2G7GTpuGM2A6VxECMcT+kNtlg\nLSUC8hWmg4/+yaLZOHYiygMpJZ1tDsybWJG5pV0s8Lt3IpmGJOaXHPp19DiW\nbPSAOx1acknlnNWIw+NLXL3zRxjw7F4TnOSPhrkoT0KKwI+1//Vvps2EuFwT\nfZ/b\r\n=cxtO\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [],
  "gitHead": "a6f607a53d987e9927f9560b2e29451d579b6f58",
  "license": "MIT",
  "main": "dist/plugin.js",
  "maintainers": [
    {
      "name": "akryum",
      "email": "guillaume.b.chau@gmail.com"
    },
    {
      "name": "chrisvfritz",
      "email": "chrisvfritz@gmail.com"
    },
    {
      "name": "eddyerburgh",
      "email": "edward.yerburgh@gmail.com"
    },
    {
      "name": "ktsn",
      "email": "ktsn55@gmail.com"
    },
    {
      "name": "michalsnik",
      "email": "msajnog93@gmail.com"
    },
    {
      "name": "mysticatea",
      "email": "star.ctor@gmail.com"
    },
    {
      "name": "nickmessing",
      "email": "dot.nick.dot.messing@gmail.com"
    },
    {
      "name": "soda",
      "email": "haoqunjiang+npm@gmail.com"
    },
    {
      "name": "yyx990803",
      "email": "yyx990803@gmail.com"
    },
    {
      "name": "znck",
      "email": "rahulkdn@gmail.com"
    }
  ],
  "name": "@vue/babel-plugin-transform-vue-jsx",
  "nyc": {
    "exclude": [
      "dist",
      "test"
    ]
  },
  "optionalDependencies": {},
  "private": false,
  "readme": "## @vue/babel-plugin-transform-vue-jsx\n\n> Babel plugin for Vue 2.0 JSX\n\n### Babel Compatibility Notes\n\n- This repo is only compatible with Babel 7.x, for 6.x please use [vuejs/babel-plugin-transform-vue-jsx](https://github.com/vuejs/babel-plugin-transform-vue-jsx)\n\n### Requirements\n\n- Assumes you are using Babel with a module bundler e.g. Webpack, because the spread merge helper is imported as a module to avoid duplication.\n\n- This is mutually exclusive with `babel-plugin-transform-react-jsx`.\n\n### Usage\n\n```bash\nnpm install @vue/babel-plugin-transform-vue-jsx --save-dev\nnpm install @vue/babel-helper-vue-jsx-merge-props --save\n```\n\nIn your `.babelrc`:\n\n```json\n{\n  \"plugins\": [\"transform-vue-jsx\"]\n}\n```\n\nHowever it is recommended to use the [configurable preset](../babel-preset-jsx/README.md) instead.\n\n### Details\n\nThe plugin transpiles the following JSX:\n\n```jsx\n<div id=\"foo\">{this.text}</div>\n```\n\nTo the following JavaScript:\n\n```js\nh(\n  'div',\n  {\n    attrs: {\n      id: 'foo',\n    },\n  },\n  [this.text],\n)\n```\n\nNote the `h` function, which is a shorthand for a Vue instance's `$createElement` method, must be in the scope where the JSX is. Since this method is passed to component render functions as the first argument, in most cases you'd do this:\n\n```js\nVue.component('jsx-example', {\n  render(h) {\n    // <-- h must be in scope\n    return <div id=\"foo\">bar</div>\n  },\n})\n```\n\n### Difference from React JSX\n\nFirst, Vue 2.0's vnode format is different from React's. The second argument to the `createElement` call is a \"data object\" that accepts nested objects. Each nested object will be then processed by corresponding modules:\n\n```js\nrender (h) {\n  return h('div', {\n    // Component props\n    props: {\n      msg: 'hi'\n    },\n    // Normal HTML attributes\n    attrs: {\n      id: 'foo'\n    },\n    // DOM props\n    domProps: {\n      innerHTML: 'bar'\n    },\n    // Event handlers are nested under \"on\", though\n    // modifiers such as in v-on:keyup.enter are not\n    // supported. You'll have to manually check the\n    // keyCode in the handler instead.\n    on: {\n      click: this.clickHandler\n    },\n    // For components only. Allows you to listen to\n    // native events, rather than events emitted from\n    // the component using vm.$emit.\n    nativeOn: {\n      click: this.nativeClickHandler\n    },\n    // Class is a special module, same API as `v-bind:class`\n    class: {\n      foo: true,\n      bar: false\n    },\n    // Style is also same as `v-bind:style`\n    style: {\n      color: 'red',\n      fontSize: '14px'\n    },\n    // Other special top-level properties\n    key: 'key',\n    ref: 'ref',\n    // Assign the `ref` is used on elements/components with v-for\n    refInFor: true,\n    slot: 'slot'\n  })\n}\n```\n\nThe equivalent of the above in Vue 2.0 JSX is:\n\n```jsx\nrender (h) {\n  return (\n    <div\n      // Component props\n      propsMsg=\"hi\"\n      // Normal attributes or component props.\n      id=\"foo\"\n      // DOM properties are prefixed with `domProps`\n      domPropsInnerHTML=\"bar\"\n      // event listeners are prefixed with `on` or `nativeOn`\n      onClick={this.clickHandler}\n      nativeOnClick={this.nativeClickHandler}\n      // other special top-level properties\n      class={{ foo: true, bar: false }}\n      style={{ color: 'red', fontSize: '14px' }}\n      key=\"key\"\n      ref=\"ref\"\n      // assign the `ref` is used on elements/components with v-for\n      refInFor\n      slot=\"slot\">\n    </div>\n  )\n}\n```\n\n### Component Tip\n\nIf a custom element starts with lowercase, it will be treated as a string id and used to lookup a registered component. If it starts with uppercase, it will be treated as an identifier, which allows you to do:\n\n```js\nimport Todo from './Todo.js'\n\nexport default {\n  render(h) {\n    return <Todo /> // no need to register Todo via components option\n  },\n}\n```\n\n### JSX Spread\n\nJSX spread is supported, and this plugin will intelligently merge nested data properties. For example:\n\n```jsx\nconst data = {\n  class: ['b', 'c'],\n}\nconst vnode = <div class=\"a\" {...data} />\n```\n\nThe merged data will be:\n\n```js\n{ class: ['a', 'b', 'c'] }\n```\n\n### Vue directives\n\nVue directives are usable the same way as in template with a few key differences:\n\n1.  You can use directives camelCased instead of kebab-cased (vMyDirective is treated as `v-my-directive`)\n2.  You have to use underscore sign instead of dots for modifiers because of JSXIdentifier limitation.\n3.  Only runtime directives work (only v-show and custom directives), compile-time directives are out of this project's scope.\n\nA full example would be: `<MyComponent vMyDirective:argument_modifier1_modifier2={someExpression} />`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/vuejs/jsx/tree/master/packages/babel-plugin-transform-vue-jsx"
  },
  "scripts": {
    "build": "rollup -c",
    "build:test": "rollup -c rollup.config.testing.js",
    "prepublish": "yarn build",
    "pretest:functional": "yarn build:test && nyc --reporter=html --reporter=text-summary babel test/functional.js --plugins ./dist/plugin.testing.js --out-file test/functional-compiled.js",
    "pretest:snapshot": "yarn build:test",
    "test": "rm -rf coverage* && yarn test:snapshot && mv coverage coverage-snapshot && yarn test:functional && mv coverage coverage-functional",
    "test:functional": "ava -v test/functional-compiled.js",
    "test:snapshot": "nyc --reporter=html --reporter=text-summary ava -v test/snapshot.js"
  },
  "version": "1.0.0-beta.2"
}
