{
  "_args": [
    [
      {
        "raw": "vue-moment",
        "scope": null,
        "escapedName": "vue-moment",
        "name": "vue-moment",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/bayadhouib/Downloads/vue-app-master-3"
    ]
  ],
  "_from": "vue-moment@latest",
  "_id": "vue-moment@4.0.0",
  "_inCache": true,
  "_location": "/vue-moment",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vue-moment_4.0.0_1529591629163_0.027460893049213286"
  },
  "_npmUser": {
    "name": "brockreece",
    "email": "brockreece@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vue-moment",
    "scope": null,
    "escapedName": "vue-moment",
    "name": "vue-moment",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/vue-moment/-/vue-moment-4.0.0.tgz",
  "_shasum": "20809d1e7d7fca63d556fb8d008b95993d32f5ea",
  "_shrinkwrap": null,
  "_spec": "vue-moment",
  "_where": "/Users/bayadhouib/Downloads/vue-app-master-3",
  "author": {
    "name": "brockpetrie"
  },
  "bugs": {
    "url": "https://github.com/brockpetrie/vue-moment/issues"
  },
  "dependencies": {
    "moment": "^2.11.1"
  },
  "description": "Handy Moment.js filters for your Vue.js project",
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.3",
    "babel-jest": "^21.2.0",
    "babel-loader": "^7.1.2",
    "babel-preset-env": "^1.6.1",
    "bili": "^2.1.2",
    "eslint": "^4.12.1",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-loader": "^1.9.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-react": "^7.5.1",
    "jest": "^21.2.1",
    "jest-cli": "^21.2.1",
    "jest-serializer-vue": "^0.2.0",
    "jest-vue": "^0.8.1",
    "moment-timezone": "^0.5.14",
    "pre-commit": "^1.2.2",
    "rollup-plugin-babel": "^3.0.4",
    "vue": "^2.5.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lNkEPuA3i3A4q4TDSwOXoRF4Y2vHHdaTOSvpPyGgxoFQP8n4sUh6jU5aJj3FIMlXo5UaHLPIz5hvvpvYx9Wj0w==",
    "shasum": "20809d1e7d7fca63d556fb8d008b95993d32f5ea",
    "tarball": "https://registry.npmjs.org/vue-moment/-/vue-moment-4.0.0.tgz",
    "fileCount": 17,
    "unpackedSize": 643431,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbK7dNCRA9TVsSAnZWagAAiB0P/0FESiz/e9TXWo/VcFzz\nM46VkONRDKYOEzayvSxRD+hFQ6IvwHnUzk/qEMWZ8zDLFhCijMuxy7gAudwS\nYxDS7xs0GyCXGTAoE7XWKuPdAZQlDjKHceUFKIEcc0lpJSjQ+LSN7OTmmLLb\ntJLOdwSmhtTKC7Bt7qG6/94Cdp4wyse89qdAA3QPrL0bqs59KaNd6ARjMcKF\nw4q7xw20v7UHwXRPund7ZtF3AtQIg8IyuDdMnnAnOAilgOhC2JhvV4rjBffz\n9Olo+NgxcfXpRw+7O5bphGjuDa0vJdFwk7VCYULmD73jnj/owkFlKUxFa119\nLf+JuaFJNybh5G/FOFPLyj0mfAszyl5GPsuoTus94ya/betfsGZ3raCYaJ2N\ni4sGVWwEFJiCz0fzmsiDdf7NnZbURsPMzCAyt7SV+ylx0zqTT97pfv9LhlKJ\nB7szdju9Pv1HiGoP6i3Xx8FZgXEUc3NP9OFYgFoWL13CeXMpNKPGJqKom4f+\nsFM4ajpZa07zkAnKNv5l5kIAhuT0nQ25Kbmu+Iohv6xIEORtaecZJe0onpB2\nQUduDNKHrliZP0kifCnowrzF1+R8Bvg11ocqJHfSfATn4UR73fyTlpVK3gqt\n5FnEC4npVCdCiwHBZwd0ePOeznuwZjuAhjTSw2qCXySMUaNXrj4tOnx9rY/q\nLeuW\r\n=28Xx\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "e29269bde80a7e2e0fe2e8bcd329bbe275ae3447",
  "homepage": "https://github.com/brockpetrie/vue-moment#readme",
  "jest": {
    "moduleFileExtensions": [
      "js",
      "vue"
    ],
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/$1"
    },
    "transform": {
      "^.+\\.js$": "<rootDir>/node_modules/babel-jest",
      ".*\\.(vue)$": "<rootDir>/node_modules/jest-vue"
    },
    "snapshotSerializers": [
      "<rootDir>/node_modules/jest-serializer-vue"
    ],
    "mapCoverage": true
  },
  "keywords": [
    "vue",
    "custom",
    "date",
    "time",
    "filter",
    "moment",
    "moment.js"
  ],
  "license": "MIT",
  "main": "dist/vue-moment.js",
  "maintainers": [
    {
      "name": "brockpetrie",
      "email": "brockpetrie@gmail.com"
    },
    {
      "name": "brockreece",
      "email": "brockreece@gmail.com"
    }
  ],
  "name": "vue-moment",
  "optionalDependencies": {},
  "peerDependencies": {
    "vue": ">=1.x.x"
  },
  "pre-commit": "eslint",
  "readme": "# vue-moment\n[![npm version](https://badge.fury.io/js/vue-moment.svg)](https://badge.fury.io/js/vue-moment)\n[![Build Status](https://travis-ci.org/brockpetrie/vue-moment.svg?branch=master)](https://travis-ci.org/brockpetrie/vue-moment)\n[![Monthly Downloads](https://img.shields.io/npm/dm/vue-moment.svg)](https://www.npmjs.com/package/vue-moment)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nHandy [Moment.js](http://www.momentjs.com) filters for your [Vue.js](http://vuejs.org/) project.\n\n## Installation\n\nInstall via NPM...\n\n```sh\n$ npm install vue-moment\n```\n\n...and require the plugin like so:\n\n```js\nVue.use(require('vue-moment'));\n```\n\n## Usage\n\nSimply set `moment` as the filtering function and you're good to go. At least one argument is expected, which the filter assumes to be a `format` string if the argument doesn't match any of the other filtering methods.\n\n```html\n<span>{{ someDate | moment(\"dddd, MMMM Do YYYY\") }}</span>\n<!-- or create a new date from 'now' -->\n<span>{{ new Date() | moment(\"dddd, MMMM Do YYYY\") }}</span>\n```\n\n## Passing Your Date\n\nMoment.js expects your input to be either: a valid ISO 8601 formatted string (see <http://momentjs.com/docs/#/parsing/string/>), a valid `Date` object, a Unix timestamp (in seconds or milliseconds, passed as a Number), or a date string with an accompanying format pattern (i.e. when you know the format of the date input). For the latter, `vue-moment` allows you to pass your date and format pattern(s) as an array, like such:\n\n```html\n<span>{{ [ someDate, \"MM.DD.YY\" ] | moment(\"dddd, MMMM Do YYYY\") }}</span>\n<!-- or when you want to parse against more than one pattern -->\n<span>{{ [ someDate, [\"MM.DD.YY\", \"MM-DD-YY\", \"MM-DD-YYYY\"] ] | moment(\"dddd, MMMM Do YYYY\") }}</span>\n```\n\nAs of 3.0.0, passing an empty or invalid input will no longer initiate moment with a new `Date` object fallback.\n\n## Filtering Methods\n\n### format (default)\n\nThis is the default filtering option. Formats the date against a string of tokens. See <http://momentjs.com/docs/#/displaying/format/> for a list of tokens and examples.\n\n**Default**\n\n```html\n<span>{{ someDate | moment(\"YYYY\") }}</span>\n<!-- e.g. \"2010\" -->\n<span>{{ someDate | moment(\"ddd, hA\") }}</span>\n<!-- e.g. \"Sun, 3PM\" -->\n<span>{{ someDate | moment(\"dddd, MMMM Do YYYY, h:mm:ss a\") }}</span>\n<!-- e.g. \"Sunday, February 14th 2010, 3:25:50 pm\" -->\n```\n\nFor more information about `moment#format`, check out <http://momentjs.com/docs/#/displaying/format/>.\n\n\n### from\n\nDisplay a Moment in relative time, either from now or from a specified date.\n\n**Default** (calculates from current time)\n\n```html\n<span>{{ someDate | moment(\"from\", \"now\") }}</span>\n<!-- or shorthanded -->\n<span>{{ someDate | moment(\"from\") }}</span>\n```\n\n**With a reference time given**\n\n```html\n<span>{{ someDate | moment(\"from\", \"Jan. 11th, 1985\") }}</span>\n```\n\n**With suffix hidden** (e.g. '4 days ago' -> '4 days')\n\n```html\n<span>{{ someDate | moment(\"from\", \"now\", true) }}</span>\n<!-- or -->\n<span>{{ someDate | moment(\"from\", true) }}</span>\n<!-- or with a reference time -->\n<span>{{ someDate | moment(\"from\", \"Jan. 11th, 2000\", true) }}</span>\n```\n\nFor more information about `moment#fromNow` and `moment#from`, check out <http://momentjs.com/docs/#/displaying/fromnow/> and <http://momentjs.com/docs/#/displaying/from/>.\n\n\n### calendar\n\nFormats a date with different strings depending on how close to a certain date (today by default) the date is. You can also pass a reference date and options.\n\n**Default** (calculates from current time)\n\n```html\n<span>{{ someDate | moment(\"calendar\") }}</span>\n<!-- e.g. \"Last Monday 2:30 AM\" -->\n```\n\n**With a reference time given**\n\n```html\n<span>{{ someDate | moment(\"calendar\", \"July 10 2011\") }}</span>\n<!-- e.g. \"7/10/2011\" -->\n```\n\n**With options**\n\n```html\n<span>{{ new Date() | moment('add', '6 days', 'calendar', null, { nextWeek: '[Happens in a week]' }) }}</span>\n<!-- \"Happens in a week\" -->\n```\n\nFor more information about `moment#calendar`, check out <http://momentjs.com/docs/#/displaying/calendar-time/>.\n\n\n### add\n\nMutates the original Moment by adding time.\n\n```html\n<span>{{ someDate | moment(\"add\", \"7 days\") }}</span>\n<!-- or with multiple keys -->\n<span>{{ someDate | moment(\"add\", \"1 year, 3 months, 30 weeks, 10 days\") }}</span>\n```\n\nFor more information about `moment#add`, check out <http://momentjs.com/docs/#/manipulating/add/>.\n\n\n### subtract\n\nWorks the same as `add`, but mutates the original moment by subtracting time.\n\n```html\n<span>{{ someDate | moment(\"subtract\", \"3 hours\") }}</span>\n```\n\nFor more information about `moment#subtract`, check out <http://momentjs.com/docs/#/manipulating/subtract/>.\n\n### timezone\n\nConvert the date to a certain timezone\n\n```html\n<span>{{ date | moment('timezone', 'America/Los_Angeles', 'LLLL ss')}}</span>\n```\n\n**To use this filter you will need to pass `moment-timezone` through to the plugin**\n\n```js\n// main.js\nimport Vue from 'vue'\nimport VueMoment from 'vue-moment'\nimport moment from 'moment-timezone'\n\nVue.use(VueMoment, {\n    moment,\n})\n```\n\nFor more information about `moment#timezone`, check out <https://momentjs.com/timezone/docs/#/using-timezones/converting-to-zone/>.\n\n\n## Chaining\n\nThere's some built-in (and not thoroughly tested) support for chaining, like so:\n\n```html\n<span>{{ someDate | moment(\"add\", \"2 years, 8 days\", \"subtract\", \"3 hours\", \"ddd, hA\") }}</span>\n```\n\nThis would add 2 years and 8 months to the date, then subtract 3 hours, then format the resulting date.\n\n\n## Durations\n\n`vue-moment` also provides a `duration` filter that leverages Moment's ability to parse, manipulate and display durations of time. Durations should be passed as either: a String of a valid ISO 8601 formatted duration, a Number of milliseconds, an Array containing a number and unit of measurement (for passing a number other than milliseconds), or an Object of values (for when multiple different units of measurement are needed).\n\n```html\n<span>{{ 3600000 | duration('humanize') }}</span>\n<!-- \"an hour\" -->\n<span>{{ 'PT1800S' | duration('humanize') }}</span>\n<!-- \"30 minutes\" -->\n<span>{{ [35, 'days'] | duration('humanize', true) }}</span>\n<!-- \"in a month\" -->\n```\n\nThis filter is purely a pass-through proxy to `moment.duration` methods, so pretty much all the functions outlined in their [docs](https://momentjs.com/docs/#/durations/) are callable.\n\n```html\n<span>{{ [-1, 'minutes'] | duration('humanize', true) }}</span>\n<!-- \"a minute ago\" -->\n<span>{{ { days: 10, months: 1 } | duration('asDays') }}</span>\n<!-- \"40\" -->\n<span>{{ 'P3D' | duration('as', 'hours') }}</span>\n<!-- \"72\" -->\n```\n\nFor manipulating a duration by either subtraction or addition, first use the relevant filter option, then chain your duration display filter.\n\n```html\n<span>{{ [1, 'minutes'] | duration('subtract', 120000) | duration('humanize', true) }}</span>\n<!-- \"a minute ago\" -->\n<span>{{ [-10, 'minutes'] | duration('add', 'PT11M') | duration('humanize', true) }}</span>\n<!-- \"in a minute\" -->\n<span>{{ [2, 'years'] | duration('add', 1, 'year') | duration('humanize') }}</span>\n<!-- \"3 years\" -->\n```\n\n`duration` is for contextless lengths of time; for comparing 2 dates, use the `diff` method rather than hacking around with Moment durations. For more information about `moment#duration`, check out <https://momentjs.com/docs/#/durations/>.\n\n\n## Configuration\n\n`vue-moment` should respect any global Moment customizations, including i18n locales. For more info, check out <http://momentjs.com/docs/#/customization/>.\n\nYou can also pass a custom Moment object through with the plugin options. This technique is especially useful for overcoming the browserify locale bug demonstrated in the docs <http://momentjs.com/docs/#/use-it/browserify/>\n\n```js\nconst moment = require('moment')\nrequire('moment/locale/es')\n\nVue.use(require('vue-moment'), {\n    moment\n})\n\nconsole.log(Vue.moment().locale()) //es\n```\n\n## this.$moment\n\n`vue-moment` attaches the momentjs instance to your Vue app as `this.$moment`. \n\nThis allows you to call [the static methods momentjs provides](https://momentjs.com/docs/#/i18n/listing-months-weekdays/).\n\nIf you're using i18n, it allows you to change the locale globally by calling `this.$moment.locale(myNewLocale)`\n\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/brockpetrie/vue-moment.git"
  },
  "scripts": {
    "build": "yarn bili --input vue-moment.js --plugins babel --format umd,es,cjs,umd-min",
    "eslint": "eslint *.js",
    "test": "jest"
  },
  "version": "4.0.0"
}
