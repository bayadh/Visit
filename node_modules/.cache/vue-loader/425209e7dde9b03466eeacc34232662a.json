{"remainingRequest":"/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bayadhouib/Downloads/vue-app-master-3/src/components/Child.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bayadhouib/Downloads/vue-app-master-3/src/components/Child.vue","mtime":1547911227865},{"path":"/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'child',\ndata() {\n  return {\n    // default to Montreal to keep it simple\n    // change this to whatever makes sense\n    center: { lat: 36.169750, lng: 8.704470 },\n    markers: [],\n    places: [],\n    currentPlace: null\n  };\n},\n\nmounted() {\n  this.geolocate();\n},\n\nmethods: {\n  // receives a place object via the autocomplete component\n  setPlace(place) {\n    this.currentPlace = place;\n  },\n  addMarker() {\n    if (this.currentPlace) {\n      const marker = {\n        lat: this.currentPlace.geometry.location.lat(),\n        lng: this.currentPlace.geometry.location.lng()\n      };\n      this.markers.push({ position: marker });\n      this.places.push(this.currentPlace);\n      this.center = marker;\n      this.currentPlace = null;\n    }\n  },\n  geolocate: function() {\n    navigator.geolocation.getCurrentPosition(position => {\n      this.center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n    });\n  }\n}\n\n   \n}\n",{"version":3,"sources":["Child.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"Child.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n\n  \n <label>\n        <gmap-autocomplete\n          @place_changed=\"setPlace\">\n        </gmap-autocomplete>\n        <button @click=\"addMarker\">Add</button>\n      </label>\n      <gmap-map\n      :center=\"center\"\n      :zoom=\"12\"\n      style=\"width:100%;  height: 400px;\"\n    >\n      <gmap-marker\n        :key=\"index\"\n        v-for=\"(m, index) in markers\"\n        :position=\"m.position\"\n        @click=\"center=m.position\"\n      ></gmap-marker>\n    </gmap-map>\n\n\n\n\n\n  \n</div>\n</template>\n\n<script>\n  export default {\n      name: 'child',\n  data() {\n    return {\n      // default to Montreal to keep it simple\n      // change this to whatever makes sense\n      center: { lat: 36.169750, lng: 8.704470 },\n      markers: [],\n      places: [],\n      currentPlace: null\n    };\n  },\n\n  mounted() {\n    this.geolocate();\n  },\n\n  methods: {\n    // receives a place object via the autocomplete component\n    setPlace(place) {\n      this.currentPlace = place;\n    },\n    addMarker() {\n      if (this.currentPlace) {\n        const marker = {\n          lat: this.currentPlace.geometry.location.lat(),\n          lng: this.currentPlace.geometry.location.lng()\n        };\n        this.markers.push({ position: marker });\n        this.places.push(this.currentPlace);\n        this.center = marker;\n        this.currentPlace = null;\n      }\n    },\n    geolocate: function() {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n      });\n    }\n  }\n\n     \n  }\n</script>\n<style>\n  </style>\n"]}]}