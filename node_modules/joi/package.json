{
  "_args": [
    [
      {
        "raw": "joi@^14.3.0",
        "scope": null,
        "escapedName": "joi",
        "name": "joi",
        "rawSpec": "^14.3.0",
        "spec": ">=14.3.0 <15.0.0",
        "type": "range"
      },
      "/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/@vue/cli-shared-utils"
    ]
  ],
  "_from": "joi@^14.3.0",
  "_hasShrinkwrap": false,
  "_id": "joi@14.3.1",
  "_location": "/joi",
  "_nodeVersion": "10.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/joi_14.3.1_1545987541030_0.1391172654462376"
  },
  "_npmUser": {
    "name": "marsup",
    "email": "nicolas@morel.io"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "joi@^14.3.0",
    "scope": null,
    "escapedName": "joi",
    "name": "joi",
    "rawSpec": "^14.3.0",
    "spec": ">=14.3.0 <15.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-shared-utils"
  ],
  "_resolved": "https://registry.npmjs.org/joi/-/joi-14.3.1.tgz",
  "_shasum": "164a262ec0b855466e0c35eea2a885ae8b6c703c",
  "_shrinkwrap": null,
  "_spec": "joi@^14.3.0",
  "_where": "/Users/bayadhouib/Downloads/vue-app-master-3/node_modules/@vue/cli-shared-utils",
  "bugs": {
    "url": "https://github.com/hapijs/joi/issues"
  },
  "dependencies": {
    "hoek": "6.x.x",
    "isemail": "3.x.x",
    "topo": "3.x.x"
  },
  "description": "Object schema validation",
  "devDependencies": {
    "code": "5.x.x",
    "hapitoc": "1.x.x",
    "lab": "18.x.x"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-LQDdM+pkOrpAn4Lp+neNIFV3axv1Vna3j38bisbQhETPMANYRbFJFUyOZcOClYvM/hppMhGWuKSFEK9vjrB+bQ==",
    "shasum": "164a262ec0b855466e0c35eea2a885ae8b6c703c",
    "tarball": "https://registry.npmjs.org/joi/-/joi-14.3.1.tgz",
    "fileCount": 29,
    "unpackedSize": 192877,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcJeXVCRA9TVsSAnZWagAAlogP/j1opdOVHUSuIYIwWlq9\nbZZYC1ULv0hs6KldTcf8khezpduhdRuVlBCvLS8s/C1ILHBxz0eHfwHyRlEb\nszHIWqg8+4l5tXZpDxDLUWZaBy8eGnethfzZWH1fQsVU+MSuqtDosu09jMMQ\nNdHH5byUev31Y8vp8vfvl3KAp5dd/D1B/yKnORJU4WNalBvH5DnLfk6yQfvn\nIkAyNQdYMiGoYi8jONJS1uLCqSn9GijyRaaytRwwAJ95nHW9mkNRzmh95ATs\nvqYZJzRwMo9Icspm+JhwJ+/q9iEAjVZZRQuALOx1F3n9CsB0NbR8efFACXDF\nJ2Va19Vnc6rPJXK6fmTMQc0DVGwYvXZOejevun3Veu7nVzjluSsQkbsL1dSt\nWKDshdE4qDzOTJRU1OFHY9NoUqE8CtOvPsUX4qNweguYTdltlXT2fbW0PJYx\n/y9IOfhPeo1kuoW3zb1eYm7iPQrwOwNeyPj5VJB+Vs7sZZWG48Xf+NL21Drc\nz7dpksTlHxLxmd0nzNM6ZwPHi9u2gtlW7uV8RbEhxBtpzgBWYWTQWyRgs6Pl\nAfLN3jU9vT3bfYgIGk6ZBRr9IwWZIPDLstbVi1HCyTvZ+I7cM4GdWI1NO8GU\ni/4sNcFJjSNJUp29ESzAtEli7dEAn7KC4p/myLS+Vun2TPZUwWDV2BlbQVmu\nyqmP\r\n=bLT2\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "454d06cc563559a26c20ecfc68360fdeb6d1241b",
  "homepage": "https://github.com/hapijs/joi",
  "keywords": [
    "hapi",
    "schema",
    "validation"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "hueniverse",
      "email": "eran@hammer.io"
    },
    {
      "name": "marsup",
      "email": "nicolas@morel.io"
    },
    {
      "name": "nlf",
      "email": "quitlahok@gmail.com"
    },
    {
      "name": "wyatt",
      "email": "wpreul@gmail.com"
    }
  ],
  "name": "joi",
  "optionalDependencies": {},
  "readme": "![joi Logo](https://raw.github.com/hapijs/joi/master/images/joi.png)\n\nObject schema description language and validator for JavaScript objects.\n\n[![npm version](https://badge.fury.io/js/joi.svg)](http://badge.fury.io/js/joi)\n[![Build Status](https://travis-ci.org/hapijs/joi.svg?branch=master)](https://travis-ci.org/hapijs/joi)\n[![NSP Status](https://nodesecurity.io/orgs/hapijs/projects/0394bf83-b5bc-410b-878c-e8cf1b92033e/badge)](https://nodesecurity.io/orgs/hapijs/projects/0394bf83-b5bc-410b-878c-e8cf1b92033e)\n[![Known Vulnerabilities](https://snyk.io/test/github/hapijs/joi/badge.svg)](https://snyk.io/test/github/hapijs/joi)\n\nLead Maintainer: [Nicolas Morel](https://github.com/marsup)\n\n# Introduction\n\nImagine you run facebook and you want visitors to sign up on the website with real names and not something like `l337_p@nda` in the first name field. How would you define the limitations of what can be inputted and validate it against the set rules?\n\nThis is joi, joi allows you to create *blueprints* or *schemas* for JavaScript objects (an object that stores information) to ensure *validation* of key information.\n\n# API\nSee the detailed [API Reference](https://github.com/hapijs/joi/blob/v14.3.1/API.md).\n\n# Example\n\n```javascript\nconst Joi = require('joi');\n\nconst schema = Joi.object().keys({\n    username: Joi.string().alphanum().min(3).max(30).required(),\n    password: Joi.string().regex(/^[a-zA-Z0-9]{3,30}$/),\n    access_token: [Joi.string(), Joi.number()],\n    birthyear: Joi.number().integer().min(1900).max(2013),\n    email: Joi.string().email({ minDomainAtoms: 2 })\n}).with('username', 'birthyear').without('password', 'access_token');\n\n// Return result.\nconst result = Joi.validate({ username: 'abc', birthyear: 1994 }, schema);\n// result.error === null -> valid\n\n// You can also pass a callback which will be called synchronously with the validation result.\nJoi.validate({ username: 'abc', birthyear: 1994 }, schema, function (err, value) { });  // err === null -> valid\n\n```\n\nThe above schema defines the following constraints:\n* `username`\n    * a required string\n    * must contain only alphanumeric characters\n    * at least 3 characters long but no more than 30\n    * must be accompanied by `birthyear`\n* `password`\n    * an optional string\n    * must satisfy the custom regex\n    * cannot appear together with `access_token`\n* `access_token`\n    * an optional, unconstrained string or number\n* `birthyear`\n    * an integer between 1900 and 2013\n* `email`\n    * a valid email address string\n    * must have two domain parts e.g. `example.com`\n\n# Usage\n\nUsage is a two steps process. First, a schema is constructed using the provided types and constraints:\n\n```javascript\nconst schema = {\n    a: Joi.string()\n};\n```\n\nNote that **joi** schema objects are immutable which means every additional rule added (e.g. `.min(5)`) will return a\nnew schema object.\n\nSecond, the value is validated against the defined schema:\n\n```javascript\nconst {error, value} = Joi.validate({ a: 'a string' }, schema);\n\n// or\n\nJoi.validate({ a: 'a string' }, schema, function (error, value) { });\n```\n\nIf the input is valid, then the `error` will be `null`, otherwise it will be an `Error` object providing more information.\n\nThe schema can be a plain JavaScript object where every key is assigned a **joi** type, or it can be a **joi** type directly:\n\n```javascript\nconst schema = Joi.string().min(10);\n```\n\nIf the schema is a **joi** type, the `schema.validate(value, callback)` can be called directly on the type. When passing a non-type schema object,\nthe module converts it internally to an object() type equivalent to:\n\n```javascript\nconst schema = Joi.object().keys({\n    a: Joi.string()\n});\n```\n\nWhen validating a schema:\n\n* Values (or keys in case of objects) are optional by default.\n\n    ```javascript\n    Joi.validate(undefined, Joi.string()); // validates fine\n    ```\n\n    To disallow this behavior, you can either set the schema as `required()`, or set `presence` to `\"required\"` when passing `options`:\n\n    ```javascript\n    Joi.validate(undefined, Joi.string().required());\n    // or\n    Joi.validate(undefined, Joi.string(), /* options */ { presence: \"required\" });\n    ```\n\n* Strings are utf-8 encoded by default.\n* Rules are defined in an additive fashion and evaluated in order, first the inclusive rules, then the exclusive rules.\n\n# Browsers\n\nJoi doesn't directly support browsers, but you could use [joi-browser](https://github.com/jeffbski/joi-browser) for an ES5 build of Joi that works in browsers, or as a source of inspiration for your own builds.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/joi.git"
  },
  "scripts": {
    "test": "lab -t 100 -a code -L",
    "test-cov-html": "lab -r html -o coverage.html -a code",
    "test-debug": "lab -a code",
    "toc": "hapitoc && node docs/check-errors-list.js",
    "version": "npm run toc && git add API.md README.md"
  },
  "version": "14.3.1"
}
